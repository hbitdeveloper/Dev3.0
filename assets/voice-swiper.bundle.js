(()=>{var __webpack_modules__={21:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\r\n * @Date: 2022-12-06 19:57:09\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-12 19:08:07\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\voice-swiper.js\r\n */\nvar IndexVoiceSwiper = /*#__PURE__*/function () {\n  function IndexVoiceSwiper(el) {\n    _classCallCheck(this, IndexVoiceSwiper);\n    this.DOM = {\n      el: el.el,\n      swiperContainer: el.swiperContainer,\n      thumbs: el.thumbs\n    };\n    this.init();\n  }\n  _createClass(IndexVoiceSwiper, [{\n    key: "init",\n    value: function init() {\n      var self = this;\n      this.imgSwiper = new Swiper(this.DOM.thumbs, {\n        loop: true,\n        effect: "fade",\n        allowTouchMove: false\n      });\n      this.swiper = new Swiper(this.DOM.swiperContainer, {\n        slidesPerView: \'auto\',\n        spaceBetween: 0,\n        loop: true,\n        followFinger: false,\n        on: {\n          transitionEnd: function transitionEnd() {\n            var slide = this.slides.eq(this.activeIndex);\n            self.reSetCommentStatus();\n          },\n          resize: function resize() {\n            var _this = this;\n            setTimeout(function () {\n              _this.update();\n            }, 500);\n          }\n        },\n        navigation: {\n          nextEl: "".concat(this.DOM.el, " .slideshow-navigation-button.next"),\n          prevEl: "".concat(this.DOM.el, " .slideshow-navigation-button.prev")\n        },\n        thumbs: {\n          swiper: this.imgSwiper\n        },\n        pagination: {\n          el: "".concat(this.DOM.el, " .slideshow-pagination-voice"),\n          clickable: true,\n          bulletClass: \'slideshow-pagination-item\',\n          bulletActiveClass: \'active pagination-active\',\n          clickableClass: \'slideshow-pagination-clickable\',\n          modifierClass: \'slideshow-pagination-\',\n          renderBullet: function renderBullet(index, className) {\n            var slideIndex = index,\n              number = index <= 8 ? \'0\' + (slideIndex + 1) : slideIndex + 1;\n            var paginationItem = \'<span class="slideshow-pagination-item">\';\n            paginationItem = index <= 8 ? paginationItem + \'<span class="pagination-separator"><span class="pagination-separator-loader"></span></span>\' : paginationItem;\n            paginationItem += \'</span>\';\n            return paginationItem;\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: "initEvents",\n    value: function initEvents() {\n      var selectors = {\n        slides: document.querySelectorAll("".concat(this.DOM.swiperContainer, " .swiper-slide"))\n      };\n      selectors.slides.forEach(function (slide) {\n        var _btn = slide.querySelector(".voice-content-all");\n        _btn.addEventListener("click", function (e) {\n          e.stopPropagation();\n          slide.classList.toggle("comments-all-active");\n        });\n      });\n    }\n  }, {\n    key: "reSetCommentStatus",\n    value: function reSetCommentStatus() {\n      var selectors = {\n        slides: document.querySelectorAll("".concat(this.DOM.swiperContainer, " .swiper-slide"))\n      };\n      selectors.slides.forEach(function (slide) {\n        slide.classList.remove("comments-all-active");\n      });\n    }\n  }]);\n  return IndexVoiceSwiper;\n}();\nnew IndexVoiceSwiper({\n  swiperContainer: \'.voice-list-swiper-container\',\n  el: \'.index-voice\',\n  thumbs: \'.voice-image-swiper-container\'\n});\n\n// class vSlideshow {\n//     constructor(el) {\n//         this.DOM = {\n//             el: el\n//         };\n//         this.config = {\n//             slideshow: {\n//                 delay: 5000,\n//                 pagination: {\n//                     duration: 5,\n//                 }\n//             }\n//         };\n//         this.init();\n//     }\n//     init() {\n//         var self = this;\n//         this.swiperImg = new Swiper(".user-voice .slideshow-thumbnail-container", {\n//           loop: true,\n//           slidesPerView: $(window).width() > 750 ? "auto" : "auto",\n//           clickable: true,\n//           watchSlidesProgress: true,\n//           effect: "slide",\n//           pagination: {\n//             el: \'.slideshow-pagination-voice\',\n//             clickable: false,\n//             bulletClass: \'slideshow-pagination-item\',\n//             bulletActiveClass: \'active pagination-active\',\n//             clickableClass: \'slideshow-pagination-clickable\',\n//             modifierClass: \'slideshow-pagination-\',\n//             renderBullet: function (index, className) {\n//                 var slideIndex = index,\n//                     number = (index <= 8) ? \'0\' + (slideIndex + 1) : (slideIndex + 1);\n\n//                 var paginationItem = \'<span class="slideshow-pagination-item">\';\n//                 paginationItem = (index <= 8) ? paginationItem +\n//                     \'<span class="pagination-separator"><span class="pagination-separator-loader"></span></span>\' :\n//                     paginationItem;\n//                 paginationItem += \'</span>\';\n//                 return paginationItem;\n//             },\n//         },\n//         });\n//         this.slideshow = new Swiper(this.DOM.el, {\n//             loop: true,\n//             speed: 500,\n//             preloadImages: true,\n//             updateOnImagesReady: true,\n//             lazy: true,\n//             effect: "fade",\n//             scrollbar: {\n//                 el: \'.swiper-scrollbar\',\n//             },\n//             on: {\n//                 init: function () {\n//                     self.animate(\'next\');\n//                 },\n//             },\n\n//             thumbs: $(window).width() > 750 ? {\n//               swiper: this.swiperImg\n//             } : null,\n//         });\n//         this.initEvents();\n//     }\n//     initEvents() {\n//         this.slideshow.on(\'slideNextTransitionStart\', () => this.animate(\'next\'));\n//         this.slideshow.on(\'slidePrevTransitionStart\', () => this.animate(\'prev\'));\n//         const comments = document.querySelectorAll(".slideshow-thumbnail-container .swiper-slide .voice-user-comment-all")\n\n//         const slide_next = document.querySelector(".user-voice .voice-text .next-voice-btn")\n\n//         comments.forEach(items => {\n//             items.addEventListener(\'click\', (e) => {\n//                 const parant_ = items.parentNode\n//                 const comment_ = parant_.querySelector(".voice-user-comment")\n//                 const class_ = items.getAttribute(\'class\') || \'\'\n\n//                 if(class_.indexOf(\'voice-user-comment-active\') !== -1) {\n//                     comment_.scrollTop = 0\n//                     items.classList.remove("voice-user-comment-active")\n//                     comment_.classList.remove("comment-active")\n//                     return\n//                 }\n//                 items.classList.add("voice-user-comment-active")\n//                 comment_.classList.add("comment-active")\n//             })\n//         })\n\n//         slide_next.addEventListener("click", () => {\n//             this.slideshow.slideNext()\n//         })\n\n//         const t_d = document.querySelector(".user-voice .voice-text .slideshow-thumbnail-container .swiper-wrapper")\n//         const t_s_d = document.querySelector(".user-voice .voice-banner .thumbsSlider-slideshow .swiper-wrapper")\n//         if($(window).width() < 750) {\n//             t_d.classList.remove("swiper-no-swiping")\n//             t_s_d.classList.add("swiper-no-swiping")\n//             this.swiperImg.on(\'slidePrevTransitionStart\', () => {\n//                 this.slideshow.slidePrev()\n//             });\n//             this.swiperImg.on(\'slideNextTransitionStart\', () => {\n//                 this.slideshow.slideNext()\n//             });\n//         } else {\n//             t_d.classList.add("swiper-no-swiping")\n//             t_s_d.classList.remove("swiper-no-swiping")\n//         }\n//     }\n//     animate(direction = \'next\') {\n//         gsap.set(this.DOM.el.querySelectorAll(".slide-content"), {\n//             opacity: 0\n//         })\n//         $(window).width() > 750 && gsap.set(this.DOM.el.querySelectorAll(".slide-info"), {\n//             opacity: 0\n//         })\n\n//         this.DOM.activeSlide = this.DOM.el.querySelector(\'.swiper-slide-active\'),\n//             this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector(\'.slide-image\'),\n//             this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector(\'.slide-content\'),\n//             this.DOM.activeSlideTitleLetters = this.DOM.activeSlideTitle.querySelectorAll(\'span\');\n\n//         this.DOM.oldSlide = direction === "next" ? this.DOM.el.querySelector(\'.swiper-slide-prev\') : this.DOM.el.querySelector(\'.swiper-slide-next\');\n//         if (this.DOM.oldSlide) {\n//             this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector(\'.slide-content\')\n//         }\n\n//         // slider title\n//         gsap.to(this.DOM.activeSlideTitle, .5, {\n//             ease: "power1.out",\n//             startAt: {\n//                 y: \'40px\',\n//                 opacity: 0\n//             },\n//             y: \'0%\',\n//             opacity: 1\n//         })\n\n//         // Animate background\n//         gsap.to(this.DOM.activeSlideImg, 1.5, {\n//             ease: "expo.out",\n//             startAt: {\n//                 opacity: 1\n//             },\n//             x: 0,\n//         })\n\n//         gsap.to(this.DOM.activeSlide.querySelector(".slide-info"), .5, {\n//             ease: "power1.out",\n//             startAt: {\n//                 y: \'40px\',\n//                 opacity: 0\n//             },\n//             y: \'0%\',\n//             opacity: 1\n//         })\n\n//         // Get the active thum slide\n//         if($(window).width() > 750) {\n//             this.DOM.activeThum = document.querySelector(".user-voice .slideshow-thumbnail-container .swiper-slide-active")\n//             this.DOM.activeThumContent = this.DOM.activeThum.querySelector(".voice-content")\n\n//             gsap.set(document.querySelectorAll(".slideshow-thumbnail-container .swiper-slide"), {\n//                 backgroundColor: \'#FBFBFB\'\n//             })\n//             gsap.set(this.DOM.activeThumContent, {\n//                 opacity: 0\n//             })\n\n//             gsap.to(this.DOM.activeThum, .5, {\n//                 ease: "power1.out",\n//                 startAt: {\n//                     backgroundColor: \'#FBFBFB\'\n//                 },\n//                 delay: 0.3,\n//                 backgroundColor: \'#FD5000\'\n//             })\n//             gsap.to(this.DOM.activeThumContent, .5, {\n//                 ease: "power1.out",\n//                 startAt: {\n//                     y: \'40px\',\n//                     opacity: 0\n//                 },\n//                 y: \'0%\',\n//                 opacity: 1\n//             })\n//         }\n//     }\n// }\n\n// const voiceslideshow = new vSlideshow(document.querySelector(\'.slideshow3333\'));\n\n// export default vSlideshow//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n')}},__webpack_exports__={};__webpack_modules__[21]()})();