(()=>{"use strict";var __webpack_modules__={162:()=>{eval("\n// UNUSED EXPORTS: default\n\n;// CONCATENATED MODULE: ./src/js/utils/index.js\n/*\r\n * @Date: 2022-12-28 09:58:32\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-07 15:45:27\r\n * @FilePath: \\3.0-manger\\src\\js\\utils\\index.js\r\n */\nfunction debounce(fn, wait) {\n  var _this = this;\n  var t;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(t);\n    t = setTimeout(function () {\n      return fn.apply(_this, args);\n    }, wait);\n  };\n}\nvar trapFocusHandlers = {};\nfunction getFocusableElements(container) {\n  return Array.from(container.querySelectorAll(\"summary, a[href], button:enabled, [tabindex]:not([tabindex^='-']), [draggable], area, input:not([type=hidden]):enabled, select:enabled, textarea:enabled, object, iframe\"));\n}\nfunction trapFocus(container) {\n  var elementToFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : container;\n  var elements = getFocusableElements(container);\n  var first = elements[0];\n  var last = elements[elements.length - 1];\n  removeTrapFocus();\n  trapFocusHandlers.focusin = function (event) {\n    if (event.target !== container && event.target !== last && event.target !== first) return;\n    document.addEventListener('keydown', trapFocusHandlers.keydown);\n  };\n  trapFocusHandlers.focusout = function () {\n    document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  };\n  trapFocusHandlers.keydown = function (event) {\n    if (event.code.toUpperCase() !== 'TAB') return; // If not TAB key\n    // On the last focusable element and tab forward, focus the first element.\n    if (event.target === last && !event.shiftKey) {\n      event.preventDefault();\n      first.focus();\n    }\n\n    //  On the first focusable element and tab backward, focus the last element.\n    if ((event.target === container || event.target === first) && event.shiftKey) {\n      event.preventDefault();\n      last.focus();\n    }\n  };\n  document.addEventListener('focusout', trapFocusHandlers.focusout);\n  document.addEventListener('focusin', trapFocusHandlers.focusin);\n  elementToFocus.focus();\n}\nfunction removeTrapFocus() {\n  var elementToFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  document.removeEventListener('focusin', trapFocusHandlers.focusin);\n  document.removeEventListener('focusout', trapFocusHandlers.focusout);\n  document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  if (elementToFocus) elementToFocus.focus();\n}\n\n/*\r\n    指定容器下 - autoplay video\r\n    el - video 父元素\r\n*/\nfunction autoplayVideo(el) {\n  var video = el.querySelector('iframe[src*=\"www.youtube.com\"], iframe[src*=\"player.vimeo.com\"], video');\n  if (!video) return;\n  if (video.tagName.toLowerCase() === 'video') {\n    video.play();\n    return;\n  }\n  video.src = video.src + (video.src.indexOf('?') < 0 ? '?' : '&') + 'autoplay=1';\n}\n/*\r\n    指定容器下 - stop video\r\n    el - video 父元素\r\n*/\nfunction stopVideo(el) {\n  var video = el.querySelector('iframe[src*=\"www.youtube.com\"], iframe[src*=\"player.vimeo.com\"], video');\n  if (!video) return;\n  if (video.tagName.toLowerCase() === 'video') {\n    video.pause();\n    return;\n  }\n  video.src = video.src.replace('&autoplay=1', '').replace('?autoplay=1', '');\n}\n;// CONCATENATED MODULE: ./src/js/index/video-swiper.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\r\n * @Date: 2022-12-01 17:11:17\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-11 16:33:35\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\video-swiper.js\r\n */\n\nvar VideoSlideshow = /*#__PURE__*/function () {\n  function VideoSlideshow(el) {\n    var _this = this;\n    _classCallCheck(this, VideoSlideshow);\n    this.DOM = {\n      el: el\n    };\n    this.config = {\n      slideshow: {\n        delay: 5000,\n        pagination: {\n          duration: 5\n        }\n      }\n    };\n    document.addEventListener('DOMContentLoaded', function () {\n      _this.DOM.el = document.querySelector('.video-slideshow');\n      _this.init();\n    });\n  }\n  _createClass(VideoSlideshow, [{\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      this.slideshow = new Swiper(this.DOM.el, {\n        loop: true,\n        slidesPerView: \"auto\",\n        spaceBetween: 30,\n        centeredSlides: true,\n        preloadImages: true,\n        followFinger: false,\n        updateOnImagesReady: true,\n        lazy: true,\n        pagination: {\n          el: '.slideshow-pagination',\n          clickable: true,\n          bulletClass: 'slideshow-pagination-item',\n          bulletActiveClass: 'active pagination-active',\n          clickableClass: 'slideshow-pagination-clickable',\n          modifierClass: 'slideshow-pagination-',\n          renderBullet: function renderBullet(index, className) {\n            var slideIndex = index,\n              number = index <= 8 ? '0' + (slideIndex + 1) : slideIndex + 1;\n            var paginationItem = '<span class=\"slideshow-pagination-item\">';\n            paginationItem = index <= 8 ? paginationItem + '<span class=\"pagination-separator\"><span class=\"pagination-separator-loader\"></span></span>' : paginationItem;\n            paginationItem += '</span>';\n            return paginationItem;\n          }\n        },\n        effect: \"fade\",\n        navigation: {\n          nextEl: '.slideshow-navigation-button.next',\n          prevEl: '.slideshow-navigation-button.prev'\n        },\n        scrollbar: {\n          el: '.swiper-scrollbar'\n        },\n        on: {\n          init: function init() {\n            self.animate('next');\n          },\n          resize: function resize() {\n            var _this2 = this;\n            setTimeout(function () {\n              _this2.update();\n            }, 600);\n          }\n        },\n        breakpoints: {\n          750: {\n            effect: \"slide\"\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: \"initEvents\",\n    value: function initEvents() {\n      var _this3 = this;\n      this.slideshow.on('slideNextTransitionStart', function () {\n        return _this3.animate('next');\n      });\n      this.slideshow.on('slidePrevTransitionStart', function () {\n        return _this3.animate('prev');\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'next';\n      gsap.set(this.DOM.el.querySelectorAll(\".slide-content\"), {\n        opacity: 0\n      });\n      this.DOM.activeSlide = this.DOM.el.querySelector('.swiper-slide-active');\n      this.DOM.unctiveSlide = this.DOM.el.querySelectorAll('.swiper-slide:not(.swiper-slide-active)');\n      this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector('.slide-image');\n      this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector('.slide-content');\n      this.DOM.activeSlideVideo = this.DOM.activeSlide.querySelector('.slide-video');\n      this.DOM.activeSlideTitleLetters = this.DOM.activeSlideTitle.querySelectorAll('span');\n      this.DOM.activeSlideTitleLetters = direction === \"next\" ? this.DOM.activeSlideTitleLetters : [].slice.call(this.DOM.activeSlideTitleLetters).reverse();\n      this.DOM.oldSlide = direction === \"next\" ? this.DOM.el.querySelector('.swiper-slide-prev') : this.DOM.el.querySelector('.swiper-slide-next');\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector('.slide-content');\n      }\n\n      // slider title\n      gsap.to(this.DOM.activeSlideTitle, 0.5, {\n        ease: \"power1.out\",\n        startAt: {\n          y: '40px',\n          opacity: 0\n        },\n        y: '0%',\n        opacity: 1\n      });\n\n      // Animate background\n      gsap.to(this.DOM.activeSlideImg, 1.5, {\n        ease: \"expo.out\",\n        startAt: {\n          opacity: 1\n        },\n        x: 0\n      });\n\n      // video controy\n      this.DOM.activeSlideVideo.play();\n      this.DOM.unctiveSlide;\n      for (var index = 0; index < this.DOM.unctiveSlide.length; index++) {\n        var video = this.DOM.unctiveSlide[index].querySelector(\".slide-video\");\n        if (video) {\n          video.pause();\n          video.currentTime = 0;\n        }\n      }\n\n      // video modal\n      var vModalID = this.DOM.activeSlide.getAttribute(\"block-id\");\n      var vModalSrc = this.DOM.activeSlide.getAttribute(\"block-src\");\n      var vModalDOM = document.querySelector(\".video-swiper-modal\");\n      vModalDOM.setAttribute(\"id\", 's' + vModalID);\n      var player = videojs('index-section-video');\n      player.src({\n        type: \"video/mp4\",\n        src: vModalSrc\n      });\n      modals.init({\n        callbackOpen: function callbackOpen(toggle, modal) {\n          autoplayVideo(modal);\n        },\n        callbackClose: function callbackClose(toggle, modal) {\n          stopVideo(modal);\n        }\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(fn) {\n      this.slideshow.destroy();\n      fn && fn();\n    }\n  }]);\n  return VideoSlideshow;\n}();\nvar videoSlideshow = new VideoSlideshow();\n/* harmony default export */ const video_swiper = ((/* unused pure expression or super */ null && (videoSlideshow)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///162\n")}},__webpack_exports__={};__webpack_modules__[162]()})();