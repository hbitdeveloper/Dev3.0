(()=>{"use strict";var __webpack_modules__={550:()=>{eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*\r\n * @Date: 2022-12-01 17:11:17\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2022-12-16 15:35:08\r\n * @FilePath: \\shopify3.0\\src\\js\\index\\video-swiper.js\r\n */\nvar VideoSlideshow = /*#__PURE__*/function () {\n  function VideoSlideshow(el) {\n    var _this = this;\n\n    _classCallCheck(this, VideoSlideshow);\n\n    this.DOM = {\n      el: el\n    };\n    this.config = {\n      slideshow: {\n        delay: 5000,\n        pagination: {\n          duration: 5\n        }\n      }\n    };\n    document.addEventListener('DOMContentLoaded', function () {\n      _this.init();\n    });\n  }\n\n  _createClass(VideoSlideshow, [{\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      this.slideshow = new Swiper(this.DOM.el, {\n        loop: true,\n        slidesPerView: \"auto\",\n        spaceBetween: 30,\n        centeredSlides: true,\n        preloadImages: true,\n        updateOnImagesReady: true,\n        lazy: true,\n        pagination: {\n          el: '.slideshow-pagination',\n          clickable: true,\n          bulletClass: 'slideshow-pagination-item',\n          bulletActiveClass: 'active pagination-active',\n          clickableClass: 'slideshow-pagination-clickable',\n          modifierClass: 'slideshow-pagination-',\n          renderBullet: function renderBullet(index, className) {\n            var slideIndex = index,\n                number = index <= 8 ? '0' + (slideIndex + 1) : slideIndex + 1;\n            var paginationItem = '<span class=\"slideshow-pagination-item\">';\n            paginationItem = index <= 8 ? paginationItem + '<span class=\"pagination-separator\"><span class=\"pagination-separator-loader\"></span></span>' : paginationItem;\n            paginationItem += '</span>';\n            return paginationItem;\n          }\n        },\n        effect: $(window).width() > 750 ? \"slide\" : \"fade\",\n        navigation: {\n          nextEl: '.slideshow-navigation-button.next',\n          prevEl: '.slideshow-navigation-button.prev'\n        },\n        scrollbar: {\n          el: '.swiper-scrollbar'\n        },\n        on: {\n          init: function init() {\n            self.animate('next');\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: \"initEvents\",\n    value: function initEvents() {\n      var _this2 = this;\n\n      this.slideshow.on('slideNextTransitionStart', function () {\n        return _this2.animate('next');\n      });\n      this.slideshow.on('slidePrevTransitionStart', function () {\n        return _this2.animate('prev');\n      });\n    }\n  }, {\n    key: \"autoplayVideo\",\n    value: function autoplayVideo(modal) {\n      var video = modal.querySelector('iframe[src*=\"www.youtube.com\"], iframe[src*=\"player.vimeo.com\"], video');\n      if (!video) return; // HTML5 video play\n\n      if (video.tagName.toLowerCase() === 'video') {\n        video.play();\n        return;\n      }\n\n      video.src = video.src + (video.src.indexOf('?') < 0 ? '?' : '&') + 'autoplay=1';\n    }\n  }, {\n    key: \"stopVideo\",\n    value: function stopVideo(modal) {\n      // YouTube or HTML5 video in the modal\n      var video = modal.querySelector('iframe[src*=\"www.youtube.com\"], iframe[src*=\"player.vimeo.com\"], video');\n      if (!video) return; // pause HTML5 video\n\n      if (video.tagName.toLowerCase() === 'video') {\n        video.pause();\n        return;\n      } // Remove autoplay from video src\n\n\n      video.src = video.src.replace('&autoplay=1', '').replace('?autoplay=1', '');\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'next';\n      gsap.set(this.DOM.el.querySelectorAll(\".slide-content\"), {\n        opacity: 0\n      });\n      this.DOM.activeSlide = this.DOM.el.querySelector('.swiper-slide-active');\n      this.DOM.unctiveSlide = this.DOM.el.querySelectorAll('.swiper-slide:not(.swiper-slide-active)');\n      this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector('.slide-image');\n      this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector('.slide-content');\n      this.DOM.activeSlideVideo = this.DOM.activeSlide.querySelector('.slide-video');\n      this.DOM.activeSlideTitleLetters = this.DOM.activeSlideTitle.querySelectorAll('span');\n      this.DOM.activeSlideTitleLetters = direction === \"next\" ? this.DOM.activeSlideTitleLetters : [].slice.call(this.DOM.activeSlideTitleLetters).reverse();\n      this.DOM.oldSlide = direction === \"next\" ? this.DOM.el.querySelector('.swiper-slide-prev') : this.DOM.el.querySelector('.swiper-slide-next');\n\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector('.slide-content');\n      } // slider title\n\n\n      gsap.to(this.DOM.activeSlideTitle, 0.5, {\n        ease: \"power1.out\",\n        startAt: {\n          y: '40px',\n          opacity: 0\n        },\n        y: '0%',\n        opacity: 1\n      }); // Animate background\n\n      gsap.to(this.DOM.activeSlideImg, 1.5, {\n        ease: \"expo.out\",\n        startAt: {\n          opacity: 1\n        },\n        x: 0\n      }); // video controy\n\n      this.DOM.activeSlideVideo.play();\n      this.DOM.unctiveSlide;\n\n      for (var index = 0; index < this.DOM.unctiveSlide.length; index++) {\n        var video = this.DOM.unctiveSlide[index].querySelector(\".slide-video\");\n\n        if (video) {\n          video.pause();\n          video.currentTime = 0;\n        }\n      } // video modal\n\n\n      var vModalID = this.DOM.activeSlide.getAttribute(\"block-id\");\n      var vModalSrc = this.DOM.activeSlide.getAttribute(\"block-src\");\n      var vModalDOM = document.querySelector(\".video-swiper-modal\");\n      vModalDOM.setAttribute(\"id\", 's' + vModalID);\n      var player = videojs('index-section-video');\n      player.src({\n        type: \"video/mp4\",\n        src: vModalSrc\n      });\n      var that = this;\n      modals.init({\n        callbackOpen: function callbackOpen(toggle, modal) {\n          that.autoplayVideo(modal);\n        },\n        callbackClose: function callbackClose(toggle, modal) {\n          that.stopVideo(modal);\n        }\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.slideshow.destroy();\n    }\n  }]);\n\n  return VideoSlideshow;\n}();\n\nvar videoSlideshow = new VideoSlideshow(document.querySelector('.video-slideshow'));\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (videoSlideshow)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///550\n")}},__webpack_exports__={};__webpack_modules__[550]()})();