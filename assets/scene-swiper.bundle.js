(()=>{"use strict";var __webpack_modules__={997:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\r\n * @Date: 2022-12-02 15:16:12\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-11 16:39:56\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\scene-swiper.js\r\n */\nvar sceneSlideshow = /*#__PURE__*/function () {\n  function sceneSlideshow(el) {\n    _classCallCheck(this, sceneSlideshow);\n    this.DOM = {\n      el: el\n    };\n    this.config = {\n      slideshow: {\n        delay: 5000,\n        pagination: {\n          duration: 5\n        }\n      }\n    };\n    this.init();\n  }\n  _createClass(sceneSlideshow, [{\n    key: "init",\n    value: function init() {\n      var self = this;\n      this.swiperImg = new Swiper(".slideshow-thumbnail-container-scene", {\n        spaceBetween: 10,\n        loop: false,\n        slidesPerView: \'auto\',\n        slidesPerGroup: 1,\n        freeMode: true,\n        watchSlidesProgress: true,\n        direction: "horizontal",\n        clickable: true,\n        breakpoints: {\n          750: {\n            direction: "vertical"\n          }\n        }\n      });\n      this.slideshow = new Swiper(this.DOM.el, {\n        speed: 500,\n        preloadImages: true,\n        updateOnImagesReady: true,\n        lazy: true,\n        effect: "fade",\n        direction: "horizontal",\n        scrollbar: {\n          el: \'.swiper-scrollbar\'\n        },\n        on: {\n          init: function init() {\n            self.animate(\'next\');\n          }\n        },\n        thumbs: {\n          swiper: this.swiperImg\n        },\n        breakpoints: {\n          750: {\n            direction: "vertical",\n            effect: "slide"\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: "initEvents",\n    value: function initEvents() {\n      var _this = this;\n      this.slideshow.on(\'slideNextTransitionStart\', function () {\n        return _this.animate(\'next\');\n      });\n      this.slideshow.on(\'slidePrevTransitionStart\', function () {\n        return _this.animate(\'prev\');\n      });\n      var this_ = this;\n      setTimeout(function () {\n        $(".slideshow-thumbnail").each(function () {\n          $(this).on(\'mouseenter\', function () {\n            var _$;\n            var index_ = ((_$ = $(this)) === null || _$ === void 0 ? void 0 : _$.index()) || 0;\n            this_.slideshow.slideTo(index_);\n          });\n        });\n      }, 200);\n    }\n  }, {\n    key: "animate",\n    value: function animate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'next\';\n      // gsap.set(this.DOM.el.querySelectorAll(".slide-content"), {\n      //     opacity: 0\n      // })\n      // gsap.set(this.DOM.el.querySelectorAll(".slide-info"), {\n      //     opacity: 0\n      // })\n\n      this.DOM.activeSlide = this.DOM.el.querySelector(\'.swiper-slide-active\'), this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector(\'.slide-content\'), this.DOM.activeSlideTitleLetters = this.DOM.activeSlideTitle.querySelectorAll(\'span\');\n      this.DOM.oldSlide = direction === "next" ? this.DOM.el.querySelector(\'.swiper-slide-prev\') : this.DOM.el.querySelector(\'.swiper-slide-next\');\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector(\'.slide-content\');\n      }\n\n      // // slider title\n      // gsap.to(this.DOM.activeSlideTitle, .5, {\n      //     ease: "power1.out",\n      //     startAt: {\n      //         y: \'40px\',\n      //         opacity: 0\n      //     },\n      //     y: \'0%\',\n      //     opacity: 1\n      // })\n\n      // gsap.to(this.DOM.activeSlide.querySelector(".slide-info"), .5, {\n      //     ease: "power1.out",\n      //     startAt: {\n      //         y: \'40px\',\n      //         opacity: 0\n      //     },\n      //     y: \'0%\',\n      //     opacity: 1\n      // })\n    }\n  }]);\n  return sceneSlideshow;\n}();\nvar slideshow = new sceneSlideshow(document.querySelector(\'.slideshowscene\'));\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (sceneSlideshow)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///997\n')}},__webpack_exports__={};__webpack_modules__[997]()})();