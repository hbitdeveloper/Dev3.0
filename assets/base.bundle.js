(()=>{"use strict";var __webpack_modules__={413:(module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n;// CONCATENATED MODULE: ./src/js/components/details-disclosure.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/*\n * @Date: 2022-12-27 10:40:33\n * @LastEditors: Leo\n * @LastEditTime: 2022-12-27 10:42:38\n * @FilePath: \\3.0-manger\\src\\js\\components\\details-disclosure.js\n * @description: drop-menu\n */\nvar DetailsDisclosure = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(DetailsDisclosure, _HTMLElement);\n  var _super = _createSuper(DetailsDisclosure);\n  function DetailsDisclosure() {\n    var _this;\n    _classCallCheck(this, DetailsDisclosure);\n    _this = _super.call(this);\n    _this.mainDetailsToggle = _this.querySelector(\'details\');\n    _this.mainDetailsToggle.addEventListener(\'focusout\', _this.onFocusOut.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(DetailsDisclosure, [{\n    key: "onFocusOut",\n    value: function onFocusOut() {\n      var _this2 = this;\n      setTimeout(function () {\n        if (!_this2.contains(document.activeElement)) _this2.close();\n      });\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this.mainDetailsToggle.removeAttribute(\'open\');\n      this.mainDetailsToggle.querySelector(\'summary\').setAttribute(\'aria-expanded\', false);\n    }\n  }]);\n  return DetailsDisclosure;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement)); // customElements.define(\'details-disclosure\', DetailsDisclosure);\n\n;// CONCATENATED MODULE: ./src/js/utils/index.js\n/*\r\n * @Date: 2022-12-28 09:58:32\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2022-12-28 09:58:32\r\n * @FilePath: \\3.0-manger\\src\\js\\utils\\index.js\r\n */\nfunction debounce(fn, wait) {\n  var _this = this;\n  var t;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(t);\n    t = setTimeout(function () {\n      return fn.apply(_this, args);\n    }, wait);\n  };\n}\nvar trapFocusHandlers = {};\nfunction getFocusableElements(container) {\n  return Array.from(container.querySelectorAll("summary, a[href], button:enabled, [tabindex]:not([tabindex^=\'-\']), [draggable], area, input:not([type=hidden]):enabled, select:enabled, textarea:enabled, object, iframe"));\n}\nfunction trapFocus(container) {\n  var elementToFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : container;\n  var elements = getFocusableElements(container);\n  var first = elements[0];\n  var last = elements[elements.length - 1];\n  removeTrapFocus();\n  trapFocusHandlers.focusin = function (event) {\n    if (event.target !== container && event.target !== last && event.target !== first) return;\n    document.addEventListener(\'keydown\', trapFocusHandlers.keydown);\n  };\n  trapFocusHandlers.focusout = function () {\n    document.removeEventListener(\'keydown\', trapFocusHandlers.keydown);\n  };\n  trapFocusHandlers.keydown = function (event) {\n    if (event.code.toUpperCase() !== \'TAB\') return; // If not TAB key\n    // On the last focusable element and tab forward, focus the first element.\n    if (event.target === last && !event.shiftKey) {\n      event.preventDefault();\n      first.focus();\n    }\n\n    //  On the first focusable element and tab backward, focus the last element.\n    if ((event.target === container || event.target === first) && event.shiftKey) {\n      event.preventDefault();\n      last.focus();\n    }\n  };\n  document.addEventListener(\'focusout\', trapFocusHandlers.focusout);\n  document.addEventListener(\'focusin\', trapFocusHandlers.focusin);\n  elementToFocus.focus();\n}\nfunction removeTrapFocus() {\n  var elementToFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  document.removeEventListener(\'focusin\', trapFocusHandlers.focusin);\n  document.removeEventListener(\'focusout\', trapFocusHandlers.focusout);\n  document.removeEventListener(\'keydown\', trapFocusHandlers.keydown);\n  if (elementToFocus) elementToFocus.focus();\n}\n;// CONCATENATED MODULE: ./src/js/components/details-modal.js\nfunction details_modal_typeof(obj) { "@babel/helpers - typeof"; return details_modal_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, details_modal_typeof(obj); }\nfunction details_modal_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction details_modal_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, details_modal_toPropertyKey(descriptor.key), descriptor); } }\nfunction details_modal_createClass(Constructor, protoProps, staticProps) { if (protoProps) details_modal_defineProperties(Constructor.prototype, protoProps); if (staticProps) details_modal_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction details_modal_toPropertyKey(arg) { var key = details_modal_toPrimitive(arg, "string"); return details_modal_typeof(key) === "symbol" ? key : String(key); }\nfunction details_modal_toPrimitive(input, hint) { if (details_modal_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (details_modal_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction details_modal_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) details_modal_setPrototypeOf(subClass, superClass); }\nfunction details_modal_createSuper(Derived) { var hasNativeReflectConstruct = details_modal_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = details_modal_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = details_modal_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return details_modal_possibleConstructorReturn(this, result); }; }\nfunction details_modal_possibleConstructorReturn(self, call) { if (call && (details_modal_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return details_modal_assertThisInitialized(self); }\nfunction details_modal_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction details_modal_wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; details_modal_wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !details_modal_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return details_modal_construct(Class, arguments, details_modal_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return details_modal_setPrototypeOf(Wrapper, Class); }; return details_modal_wrapNativeSuper(Class); }\nfunction details_modal_construct(Parent, args, Class) { if (details_modal_isNativeReflectConstruct()) { details_modal_construct = Reflect.construct.bind(); } else { details_modal_construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) details_modal_setPrototypeOf(instance, Class.prototype); return instance; }; } return details_modal_construct.apply(null, arguments); }\nfunction details_modal_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction details_modal_isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\nfunction details_modal_setPrototypeOf(o, p) { details_modal_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return details_modal_setPrototypeOf(o, p); }\nfunction details_modal_getPrototypeOf(o) { details_modal_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return details_modal_getPrototypeOf(o); }\n/*\n * @Date: 2022-12-27 15:21:01\n * @LastEditors: Leo\n * @LastEditTime: 2022-12-28 10:00:54\n * @FilePath: \\3.0-manger\\src\\js\\components\\details-modal.js\n */\n\n\nvar DetailsModal = /*#__PURE__*/function (_HTMLElement) {\n  details_modal_inherits(DetailsModal, _HTMLElement);\n  var _super = details_modal_createSuper(DetailsModal);\n  function DetailsModal() {\n    var _this;\n    details_modal_classCallCheck(this, DetailsModal);\n    _this = _super.call(this);\n    _this.detailsContainer = _this.querySelector(\'details\');\n    _this.summaryToggle = _this.querySelector(\'summary\');\n    _this.detailsContainer.addEventListener(\'keyup\', function (event) {\n      return event.code.toUpperCase() === \'ESCAPE\' && _this.close();\n    });\n    _this.summaryToggle.addEventListener(\'click\', _this.onSummaryClick.bind(details_modal_assertThisInitialized(_this)));\n    _this.querySelector(\'button[type="button"]\').addEventListener(\'click\', _this.close.bind(details_modal_assertThisInitialized(_this)));\n    _this.summaryToggle.setAttribute(\'role\', \'button\');\n    return _this;\n  }\n  details_modal_createClass(DetailsModal, [{\n    key: "isOpen",\n    value: function isOpen() {\n      return this.detailsContainer.hasAttribute(\'open\');\n    }\n  }, {\n    key: "onSummaryClick",\n    value: function onSummaryClick(event) {\n      event.preventDefault();\n      event.target.closest(\'details\').hasAttribute(\'open\') ? this.close() : this.open(event);\n    }\n  }, {\n    key: "onBodyClick",\n    value: function onBodyClick(event) {\n      if (!this.contains(event.target) || event.target.classList.contains(\'modal-overlay\')) this.close(false);\n    }\n  }, {\n    key: "open",\n    value: function open(event) {\n      this.onBodyClickEvent = this.onBodyClickEvent || this.onBodyClick.bind(this);\n      event.target.closest(\'details\').setAttribute(\'open\', true);\n      document.body.addEventListener(\'click\', this.onBodyClickEvent);\n      document.body.classList.add(\'overflow-hidden\');\n      trapFocus(this.detailsContainer.querySelector(\'[tabindex="-1"]\'), this.detailsContainer.querySelector(\'input:not([type="hidden"])\'));\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      var focusToggle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      removeTrapFocus(focusToggle ? this.summaryToggle : null);\n      this.detailsContainer.removeAttribute(\'open\');\n      document.body.removeEventListener(\'click\', this.onBodyClickEvent);\n      document.body.classList.remove(\'overflow-hidden\');\n    }\n  }]);\n  return DetailsModal;\n}( /*#__PURE__*/details_modal_wrapNativeSuper(HTMLElement)); // customElements.define(\'details-modal\', DetailsModal);\n\n;// CONCATENATED MODULE: ./src/js/components/private-search.js\nfunction private_search_typeof(obj) { "@babel/helpers - typeof"; return private_search_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, private_search_typeof(obj); }\nfunction private_search_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction private_search_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, private_search_toPropertyKey(descriptor.key), descriptor); } }\nfunction private_search_createClass(Constructor, protoProps, staticProps) { if (protoProps) private_search_defineProperties(Constructor.prototype, protoProps); if (staticProps) private_search_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction private_search_toPropertyKey(arg) { var key = private_search_toPrimitive(arg, "string"); return private_search_typeof(key) === "symbol" ? key : String(key); }\nfunction private_search_toPrimitive(input, hint) { if (private_search_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (private_search_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction private_search_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) private_search_setPrototypeOf(subClass, superClass); }\nfunction private_search_createSuper(Derived) { var hasNativeReflectConstruct = private_search_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = private_search_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = private_search_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return private_search_possibleConstructorReturn(this, result); }; }\nfunction private_search_possibleConstructorReturn(self, call) { if (call && (private_search_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return private_search_assertThisInitialized(self); }\nfunction private_search_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction private_search_wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; private_search_wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !private_search_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return private_search_construct(Class, arguments, private_search_getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return private_search_setPrototypeOf(Wrapper, Class); }; return private_search_wrapNativeSuper(Class); }\nfunction private_search_construct(Parent, args, Class) { if (private_search_isNativeReflectConstruct()) { private_search_construct = Reflect.construct.bind(); } else { private_search_construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) private_search_setPrototypeOf(instance, Class.prototype); return instance; }; } return private_search_construct.apply(null, arguments); }\nfunction private_search_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction private_search_isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }\nfunction private_search_setPrototypeOf(o, p) { private_search_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return private_search_setPrototypeOf(o, p); }\nfunction private_search_getPrototypeOf(o) { private_search_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return private_search_getPrototypeOf(o); }\n/*\r\n * @Date: 2022-12-28 09:45:19\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2022-12-28 10:01:37\r\n * @FilePath: \\3.0-manger\\src\\js\\components\\private-search.js\r\n */\n\nvar PredictiveSearch = /*#__PURE__*/function (_HTMLElement) {\n  private_search_inherits(PredictiveSearch, _HTMLElement);\n  var _super = private_search_createSuper(PredictiveSearch);\n  function PredictiveSearch() {\n    var _this;\n    private_search_classCallCheck(this, PredictiveSearch);\n    _this = _super.call(this);\n    _this.cachedResults = {};\n    _this.input = _this.querySelector(\'input[type="search"]\');\n    _this.predictiveSearchResults = _this.querySelector(\'[data-predictive-search]\');\n    _this.isOpen = false;\n    _this.setupEventListeners();\n    return _this;\n  }\n  private_search_createClass(PredictiveSearch, [{\n    key: "setupEventListeners",\n    value: function setupEventListeners() {\n      var _this2 = this;\n      var form = this.querySelector(\'form.search\');\n      form.addEventListener(\'submit\', this.onFormSubmit.bind(this));\n      this.input.addEventListener(\'input\', debounce(function (event) {\n        _this2.onChange(event);\n      }, 300).bind(this));\n      this.input.addEventListener(\'focus\', this.onFocus.bind(this));\n      this.addEventListener(\'focusout\', this.onFocusOut.bind(this));\n      this.addEventListener(\'keyup\', this.onKeyup.bind(this));\n      this.addEventListener(\'keydown\', this.onKeydown.bind(this));\n    }\n  }, {\n    key: "getQuery",\n    value: function getQuery() {\n      return this.input.value.trim();\n    }\n  }, {\n    key: "onChange",\n    value: function onChange() {\n      var searchTerm = this.getQuery();\n      if (!searchTerm.length) {\n        this.close(true);\n        return;\n      }\n      this.getSearchResults(searchTerm);\n    }\n  }, {\n    key: "onFormSubmit",\n    value: function onFormSubmit(event) {\n      if (!this.getQuery().length || this.querySelector(\'[aria-selected="true"] a\')) event.preventDefault();\n    }\n  }, {\n    key: "onFocus",\n    value: function onFocus() {\n      var searchTerm = this.getQuery();\n      if (!searchTerm.length) return;\n      if (this.getAttribute(\'results\') === \'true\') {\n        this.open();\n      } else {\n        this.getSearchResults(searchTerm);\n      }\n    }\n  }, {\n    key: "onFocusOut",\n    value: function onFocusOut() {\n      var _this3 = this;\n      setTimeout(function () {\n        if (!_this3.contains(document.activeElement)) _this3.close();\n      });\n    }\n  }, {\n    key: "onKeyup",\n    value: function onKeyup(event) {\n      if (!this.getQuery().length) this.close(true);\n      event.preventDefault();\n      switch (event.code) {\n        case \'ArrowUp\':\n          this.switchOption(\'up\');\n          break;\n        case \'ArrowDown\':\n          this.switchOption(\'down\');\n          break;\n        case \'Enter\':\n          this.selectOption();\n          break;\n      }\n    }\n  }, {\n    key: "onKeydown",\n    value: function onKeydown(event) {\n      // Prevent the cursor from moving in the input when using the up and down arrow keys\n      if (event.code === \'ArrowUp\' || event.code === \'ArrowDown\') {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: "switchOption",\n    value: function switchOption(direction) {\n      if (!this.getAttribute(\'open\')) return;\n      var moveUp = direction === \'up\';\n      var selectedElement = this.querySelector(\'[aria-selected="true"]\');\n      var allElements = this.querySelectorAll(\'li\');\n      var activeElement = this.querySelector(\'li\');\n      if (moveUp && !selectedElement) return;\n      this.statusElement.textContent = \'\';\n      if (!moveUp && selectedElement) {\n        activeElement = selectedElement.nextElementSibling || allElements[0];\n      } else if (moveUp) {\n        activeElement = selectedElement.previousElementSibling || allElements[allElements.length - 1];\n      }\n      if (activeElement === selectedElement) return;\n      activeElement.setAttribute(\'aria-selected\', true);\n      if (selectedElement) selectedElement.setAttribute(\'aria-selected\', false);\n      this.setLiveRegionText(activeElement.textContent);\n      this.input.setAttribute(\'aria-activedescendant\', activeElement.id);\n    }\n  }, {\n    key: "selectOption",\n    value: function selectOption() {\n      var selectedProduct = this.querySelector(\'[aria-selected="true"] a, [aria-selected="true"] button\');\n      if (selectedProduct) selectedProduct.click();\n    }\n  }, {\n    key: "getSearchResults",\n    value: function getSearchResults(searchTerm) {\n      var _this4 = this;\n      var queryKey = searchTerm.replace(" ", "-").toLowerCase();\n      this.setLiveRegionLoadingState();\n      if (this.cachedResults[queryKey]) {\n        this.renderSearchResults(this.cachedResults[queryKey]);\n        return;\n      }\n      fetch("".concat(routes.predictive_search_url, "?q=").concat(encodeURIComponent(searchTerm), "&").concat(encodeURIComponent(\'resources[type]\'), "=product&").concat(encodeURIComponent(\'resources[limit]\'), "=4&section_id=predictive-search")).then(function (response) {\n        if (!response.ok) {\n          var error = new Error(response.status);\n          _this4.close();\n          throw error;\n        }\n        return response.text();\n      }).then(function (text) {\n        var resultsMarkup = new DOMParser().parseFromString(text, \'text/html\').querySelector(\'#shopify-section-predictive-search\').innerHTML;\n        _this4.cachedResults[queryKey] = resultsMarkup;\n        _this4.renderSearchResults(resultsMarkup);\n      })["catch"](function (error) {\n        _this4.close();\n        throw error;\n      });\n    }\n  }, {\n    key: "setLiveRegionLoadingState",\n    value: function setLiveRegionLoadingState() {\n      this.statusElement = this.statusElement || this.querySelector(\'.predictive-search-status\');\n      this.loadingText = this.loadingText || this.getAttribute(\'data-loading-text\');\n      this.setLiveRegionText(this.loadingText);\n      this.setAttribute(\'loading\', true);\n    }\n  }, {\n    key: "setLiveRegionText",\n    value: function setLiveRegionText(statusText) {\n      var _this5 = this;\n      this.statusElement.setAttribute(\'aria-hidden\', \'false\');\n      this.statusElement.textContent = statusText;\n      setTimeout(function () {\n        _this5.statusElement.setAttribute(\'aria-hidden\', \'true\');\n      }, 1000);\n    }\n  }, {\n    key: "renderSearchResults",\n    value: function renderSearchResults(resultsMarkup) {\n      this.predictiveSearchResults.innerHTML = resultsMarkup;\n      this.setAttribute(\'results\', true);\n      this.setLiveRegionResults();\n      this.open();\n    }\n  }, {\n    key: "setLiveRegionResults",\n    value: function setLiveRegionResults() {\n      this.removeAttribute(\'loading\');\n      this.setLiveRegionText(this.querySelector(\'[data-predictive-search-live-region-count-value]\').textContent);\n    }\n  }, {\n    key: "getResultsMaxHeight",\n    value: function getResultsMaxHeight() {\n      this.resultsMaxHeight = window.innerHeight - document.getElementById(\'shopify-section-header\').getBoundingClientRect().bottom;\n      return this.resultsMaxHeight;\n    }\n  }, {\n    key: "open",\n    value: function open() {\n      this.predictiveSearchResults.style.maxHeight = this.resultsMaxHeight || "".concat(this.getResultsMaxHeight(), "px");\n      this.setAttribute(\'open\', true);\n      this.input.setAttribute(\'aria-expanded\', true);\n      this.isOpen = true;\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      var clearSearchTerm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (clearSearchTerm) {\n        this.input.value = \'\';\n        this.removeAttribute(\'results\');\n      }\n      var selected = this.querySelector(\'[aria-selected="true"]\');\n      if (selected) selected.setAttribute(\'aria-selected\', false);\n      this.input.setAttribute(\'aria-activedescendant\', \'\');\n      this.removeAttribute(\'open\');\n      this.input.setAttribute(\'aria-expanded\', false);\n      this.resultsMaxHeight = false;\n      this.predictiveSearchResults.removeAttribute(\'style\');\n      this.isOpen = false;\n    }\n  }]);\n  return PredictiveSearch;\n}( /*#__PURE__*/private_search_wrapNativeSuper(HTMLElement));\n\n;// CONCATENATED MODULE: ./src/js/index/base.js\n/* module decorator */ module = __webpack_require__.hmd(module);\nfunction base_typeof(obj) { "@babel/helpers - typeof"; return base_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, base_typeof(obj); }\n/*\r\n * @Date: 2022-12-27 15:11:35\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2022-12-28 09:46:01\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\base.js\r\n * @description: globaljs\r\n */\n\n\n\ncustomElements.define(\'details-disclosure\', DetailsDisclosure);\ncustomElements.define(\'details-modal\', DetailsModal);\ncustomElements.define(\'predictive-search\', PredictiveSearch);\n\n// Modals\n(function (e, t) {\n  "function" == typeof define && __webpack_require__.amdO ? define([], t(e)) : "object" == (typeof exports === "undefined" ? "undefined" : base_typeof(exports)) ? module.exports = t(e) : e.modals = t(e);\n})("undefined" != typeof __webpack_require__.g ? __webpack_require__.g : undefined.window || undefined.global, function (e) {\n  "use strict";\n\n  var t,\n    o,\n    n,\n    l = {},\n    c = "querySelector" in document && "addEventListener" in e && "classList" in document.createElement("_"),\n    r = "closed",\n    d = {\n      selectorToggle: "[data-modal]",\n      selectorWindow: "[data-modal-window]",\n      selectorClose: "[data-modal-close]",\n      modalActiveClass: "active",\n      modalBGClass: "modal-bg",\n      preventBGScroll: !0,\n      preventBGScrollHtml: !0,\n      preventBGScrollBody: !0,\n      backspaceClose: !0,\n      stopVideo: !0,\n      callbackOpen: function callbackOpen() {},\n      callbackClose: function callbackClose() {}\n    },\n    a = function a() {\n      var e = {},\n        t = !1,\n        o = 0,\n        n = arguments.length;\n      "[object Boolean]" === Object.prototype.toString.call(arguments[0]) && (t = arguments[0], o++);\n      for (; o < n; o++) {\n        var l = arguments[o];\n        !function (o) {\n          for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (t && "[object Object]" === Object.prototype.toString.call(o[n]) ? e[n] = a(!0, e[n], o[n]) : e[n] = o[n]);\n        }(l);\n      }\n      return e;\n    },\n    s = function s(e, t) {\n      for (Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (e) {\n        for (var t = (this.document || this.ownerDocument).querySelectorAll(e), o = t.length; --o >= 0 && t.item(o) !== this;);\n        return o > -1;\n      }); e && e !== document; e = e.parentNode) if (e.matches(t)) return e;\n      return null;\n    },\n    i = function i(e, t) {\n      if (t.stopVideo && e.classList.contains(t.modalActiveClass)) {\n        var o = e.querySelector("iframe"),\n          n = e.querySelector("video");\n        if (o) {\n          var l = o.src;\n          o.src = l;\n        }\n        n && n.pause();\n      }\n    },\n    u = function u() {\n      var e = document.createElement("div");\n      e.style.visibility = "hidden", e.style.width = "100px", e.style.msOverflowStyle = "scrollbar", document.body.appendChild(e);\n      var t = e.offsetWidth;\n      e.style.overflow = "scroll";\n      var o = document.createElement("div");\n      o.style.width = "100%", e.appendChild(o);\n      var n = o.offsetWidth;\n      return e.parentNode.removeChild(e), t - n;\n    },\n    m = function m() {\n      if (!document.querySelector("[data-modal-bg]")) {\n        var e = document.createElement("div");\n        e.setAttribute("data-modal-bg", !0), e.classList.add(n.modalBGClass), document.body.appendChild(e);\n      }\n    },\n    p = function p() {\n      var e = document.querySelector("[data-modal-bg]");\n      e && document.body.removeChild(e);\n    };\n  l.closeModal = function (e) {\n    var t = a(n || d, e || {}),\n      l = document.querySelector(t.selectorWindow + "." + t.modalActiveClass);\n    l && (i(l, t), l.classList.remove(t.modalActiveClass), p(), r = "closed", t.preventBGScroll && (document.documentElement.style.overflowY = "", document.body.style.overflowY = "", document.body.style.paddingRight = ""), t.callbackClose(o, l), o && (o.focus(), o = null));\n  }, l.openModal = function (e, c, s) {\n    var i = a(n || d, s || {}),\n      u = document.querySelector(c);\n    "open" === r && l.closeModal(i), e && (o = e), u.classList.add(i.modalActiveClass), m(), r = "open", u.setAttribute("tabindex", "-1"), u.focus(), i.preventBGScroll && (i.preventBGScrollHtml && (document.documentElement.style.overflowY = "hidden"), i.preventBGScrollBody && (document.body.style.overflowY = "hidden"), document.body.style.paddingRight = t + "px"), i.callbackOpen(e, u);\n  };\n  var v = function v(e, t, o) {\n      if (o) return e.removeEventListener("touchstart", a, !1), e.removeEventListener("touchend", s, !1), void e.removeEventListener("click", i, !1);\n      if (t && "function" == typeof t) {\n        var n,\n          l,\n          c,\n          r,\n          d,\n          a = function a(e) {\n            n = !0, l = e.changedTouches[0].pageX, c = e.changedTouches[0].pageY;\n          },\n          s = function s(e) {\n            r = e.changedTouches[0].pageX - l, d = e.changedTouches[0].pageY - c, Math.abs(r) >= 7 || Math.abs(d) >= 10 || t(e);\n          },\n          i = function i(e) {\n            if (n) return void (n = !1);\n            t(e);\n          };\n        e.addEventListener("touchstart", a, !1), e.addEventListener("touchend", s, !1), e.addEventListener("click", i, !1);\n      }\n    },\n    f = function f(e) {\n      var t = e.target,\n        o = s(t, n.selectorToggle),\n        c = s(t, n.selectorClose),\n        d = s(t, n.selectorWindow),\n        a = e.keyCode;\n      if (a && "open" === r) (27 === a || n.backspaceClose && (8 === a || 46 === a)) && l.closeModal();else if (t) {\n        if (d && !c) return;\n        !o || a && 13 !== a ? "open" === r && (e.preventDefault(), l.closeModal()) : (e.preventDefault(), l.openModal(o, o.getAttribute("data-modal"), n));\n      }\n    };\n  return l.destroy = function () {\n    n && (v(document, null, !0), document.removeEventListener("keydown", f, !1), document.documentElement.style.overflowY = "", document.body.style.overflowY = "", document.body.style.paddingRight = "", t = null, o = null, n = null);\n  }, l.init = function (e) {\n    c && (l.destroy(), n = a(d, e || {}), t = u(), v(document, f), document.addEventListener("keydown", f, !1));\n  }, l;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///413\n')}},__webpack_module_cache__={};function __webpack_require__(Q){var t=__webpack_module_cache__[Q];if(void 0!==t)return t.exports;var e=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q](e,e.exports,__webpack_require__),e.loaded=!0,e.exports}__webpack_require__.amdO={},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.hmd=Q=>((Q=Object.create(Q)).children||(Q.children=[]),Object.defineProperty(Q,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+Q.id)}}),Q);var __webpack_exports__=__webpack_require__(413)})();