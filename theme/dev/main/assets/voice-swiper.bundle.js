(()=>{"use strict";var __webpack_modules__={21:()=>{eval('function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\n/*\r\n * @Date: 2022-12-06 19:57:09\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2023-01-09 10:37:12\r\n * @FilePath: \\3.0-manger\\src\\js\\index\\voice-swiper.js\r\n */\nvar vSlideshow = /*#__PURE__*/function () {\n  function vSlideshow(el) {\n    _classCallCheck(this, vSlideshow);\n    this.DOM = {\n      el: el\n    };\n    this.config = {\n      slideshow: {\n        delay: 5000,\n        pagination: {\n          duration: 5\n        }\n      }\n    };\n    this.init();\n  }\n  _createClass(vSlideshow, [{\n    key: "init",\n    value: function init() {\n      var self = this;\n      this.swiperImg = new Swiper(".user-voice .slideshow-thumbnail-container", {\n        loop: true,\n        slidesPerView: "auto",\n        clickable: true,\n        watchSlidesProgress: true,\n        effect: "slide",\n        pagination: {\n          el: \'.slideshow-pagination-voice\',\n          clickable: false,\n          bulletClass: \'slideshow-pagination-item\',\n          bulletActiveClass: \'active pagination-active\',\n          clickableClass: \'slideshow-pagination-clickable\',\n          modifierClass: \'slideshow-pagination-\',\n          renderBullet: function renderBullet(index, className) {\n            var slideIndex = index,\n              number = index <= 8 ? \'0\' + (slideIndex + 1) : slideIndex + 1;\n            var paginationItem = \'<span class="slideshow-pagination-item">\';\n            paginationItem = index <= 8 ? paginationItem + \'<span class="pagination-separator"><span class="pagination-separator-loader"></span></span>\' : paginationItem;\n            paginationItem += \'</span>\';\n            return paginationItem;\n          }\n        }\n      });\n      this.slideshow = new Swiper(this.DOM.el, {\n        loop: true,\n        speed: 500,\n        preloadImages: true,\n        updateOnImagesReady: true,\n        lazy: true,\n        effect: "fade",\n        scrollbar: {\n          el: \'.swiper-scrollbar\'\n        },\n        on: {\n          init: function init() {\n            self.animate(\'next\');\n          }\n        },\n        thumbs: null,\n        breakpoints: {\n          750: {\n            thumbs: {\n              swiper: this.swiperImg\n            }\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: "initEvents",\n    value: function initEvents() {\n      var _this = this;\n      this.slideshow.on(\'slideNextTransitionStart\', function () {\n        return _this.animate(\'next\');\n      });\n      this.slideshow.on(\'slidePrevTransitionStart\', function () {\n        return _this.animate(\'prev\');\n      });\n      var comments = document.querySelectorAll(".slideshow-thumbnail-container .swiper-slide .voice-user-comment-all");\n      var slide_next = document.querySelector(".user-voice .voice-text .next-voice-btn");\n      comments.forEach(function (items) {\n        items.addEventListener(\'click\', function (e) {\n          var parant_ = items.parentNode;\n          var comment_ = parant_.querySelector(".voice-user-comment");\n          var class_ = items.getAttribute(\'class\') || \'\';\n          if (class_.indexOf(\'voice-user-comment-active\') !== -1) {\n            comment_.scrollTop = 0;\n            items.classList.remove("voice-user-comment-active");\n            comment_.classList.remove("comment-active");\n            return;\n          }\n          items.classList.add("voice-user-comment-active");\n          comment_.classList.add("comment-active");\n        });\n      });\n      slide_next.addEventListener("click", function () {\n        _this.slideshow.slideNext();\n      });\n      var t_d = document.querySelector(".user-voice .voice-text .slideshow-thumbnail-container .swiper-wrapper");\n      var t_s_d = document.querySelector(".user-voice .voice-banner .thumbsSlider-slideshow .swiper-wrapper");\n      if ($(window).width() < 750) {\n        t_d.classList.remove("swiper-no-swiping");\n        t_s_d.classList.add("swiper-no-swiping");\n        this.swiperImg.on(\'slidePrevTransitionStart\', function () {\n          _this.slideshow.slidePrev();\n        });\n        this.swiperImg.on(\'slideNextTransitionStart\', function () {\n          _this.slideshow.slideNext();\n        });\n      } else {\n        t_d.classList.add("swiper-no-swiping");\n        t_s_d.classList.remove("swiper-no-swiping");\n      }\n    }\n  }, {\n    key: "animate",\n    value: function animate() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'next\';\n      gsap.set(this.DOM.el.querySelectorAll(".slide-content"), {\n        opacity: 0\n      });\n      $(window).width() > 750 && gsap.set(this.DOM.el.querySelectorAll(".slide-info"), {\n        opacity: 0\n      });\n      this.DOM.activeSlide = this.DOM.el.querySelector(\'.swiper-slide-active\'), this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector(\'.slide-image\'), this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector(\'.slide-content\'), this.DOM.activeSlideTitleLetters = this.DOM.activeSlideTitle.querySelectorAll(\'span\');\n      this.DOM.oldSlide = direction === "next" ? this.DOM.el.querySelector(\'.swiper-slide-prev\') : this.DOM.el.querySelector(\'.swiper-slide-next\');\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector(\'.slide-content\');\n      }\n\n      // slider title\n      gsap.to(this.DOM.activeSlideTitle, .5, {\n        ease: "power1.out",\n        startAt: {\n          y: \'40px\',\n          opacity: 0\n        },\n        y: \'0%\',\n        opacity: 1\n      });\n\n      // Animate background\n      gsap.to(this.DOM.activeSlideImg, 1.5, {\n        ease: "expo.out",\n        startAt: {\n          opacity: 1\n        },\n        x: 0\n      });\n      gsap.to(this.DOM.activeSlide.querySelector(".slide-info"), .5, {\n        ease: "power1.out",\n        startAt: {\n          y: \'40px\',\n          opacity: 0\n        },\n        y: \'0%\',\n        opacity: 1\n      });\n\n      // Get the active thum slide\n      if ($(window).width() > 750) {\n        this.DOM.activeThum = document.querySelector(".user-voice .slideshow-thumbnail-container .swiper-slide-active");\n        this.DOM.activeThumContent = this.DOM.activeThum.querySelector(".voice-content");\n        gsap.set(document.querySelectorAll(".slideshow-thumbnail-container .swiper-slide"), {\n          backgroundColor: \'#FBFBFB\'\n        });\n        gsap.set(this.DOM.activeThumContent, {\n          opacity: 0\n        });\n        gsap.to(this.DOM.activeThum, .5, {\n          ease: "power1.out",\n          startAt: {\n            backgroundColor: \'#FBFBFB\'\n          },\n          delay: 0.3,\n          backgroundColor: \'#FD5000\'\n        });\n        gsap.to(this.DOM.activeThumContent, .5, {\n          ease: "power1.out",\n          startAt: {\n            y: \'40px\',\n            opacity: 0\n          },\n          y: \'0%\',\n          opacity: 1\n        });\n      }\n    }\n  }]);\n  return vSlideshow;\n}();\nvar voiceslideshow = new vSlideshow(document.querySelector(\'.slideshow3333\'));\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (vSlideshow)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n')}},__webpack_exports__={};__webpack_modules__[21]()})();