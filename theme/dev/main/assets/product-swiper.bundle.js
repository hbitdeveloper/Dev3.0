(()=>{"use strict";var __webpack_modules__={8:()=>{eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*\r\n * @Date: 2022-12-05 18:29:39\r\n * @LastEditors: Leo\r\n * @LastEditTime: 2022-12-08 10:27:41\r\n * @FilePath: \\shopify3.0\\src\\js\\index\\product-swiper.js\r\n */\nvar ProductSlideshow = /*#__PURE__*/function () {\n  function ProductSlideshow(el) {\n    _classCallCheck(this, ProductSlideshow);\n\n    this.DOM = {\n      el: el\n    };\n    this.config = {\n      slideshow: {\n        delay: 15000,\n        pagination: {\n          duration: 15\n        }\n      }\n    };\n    this.init();\n  }\n\n  _createClass(ProductSlideshow, [{\n    key: \"init\",\n    value: function init() {\n      var self = this;\n      this.slideshow = new Swiper(this.DOM.el, {\n        loop: true,\n        loopAdditionalSlides: 2,\n        autoplay: {\n          delay: this.config.slideshow.delay,\n          disableOnInteraction: false\n        },\n        slidesPerView: $(window).width() > 750 ? 1.8 : 0,\n        spaceBetween: 0,\n        effect: $(window).width() > 750 ? \"slide\" : \"fade\",\n        centeredSlides: true,\n        preloadImages: true,\n        updateOnImagesReady: true,\n        lazy: true,\n        navigation: {\n          nextEl: '.slideshow-navigation-button.next',\n          prevEl: '.slideshow-navigation-button.prev'\n        },\n        pagination: {\n          el: '.slideshow-pagination',\n          clickable: true,\n          bulletClass: 'slideshow-pagination-item',\n          bulletActiveClass: 'active pagination-active',\n          clickableClass: 'slideshow-pagination-clickable',\n          modifierClass: 'slideshow-pagination-',\n          renderBullet: function renderBullet(index, className) {\n            var slideIndex = index,\n                number = index <= 8 ? '0' + (slideIndex + 1) : slideIndex + 1;\n            var paginationItem = '<span class=\"slideshow-pagination-item\">';\n            paginationItem = index <= 8 ? paginationItem + '<span class=\"pagination-separator\"><span class=\"pagination-separator-loader\"></span></span>' : paginationItem;\n            paginationItem += '</span>';\n            return paginationItem;\n          }\n        },\n        on: {\n          init: function init() {\n            self.animate('next');\n          }\n        }\n      });\n      this.initEvents();\n    }\n  }, {\n    key: \"initEvents\",\n    value: function initEvents() {\n      var _this = this;\n\n      this.slideshow.on('slideNextTransitionStart', function () {\n        return _this.animate('next');\n      });\n      this.slideshow.on('slidePrevTransitionStart', function () {\n        return _this.animate('prev');\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var _this2 = this;\n\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'next';\n      gsap.set(this.DOM.el.querySelectorAll(\".slide-content\"), {\n        opacity: 0\n      });\n      this.DOM.activeSlide = this.DOM.el.querySelector('.swiper-slide-active'), this.DOM.activeSlideImg = this.DOM.activeSlide.querySelector('.slide-image'), this.DOM.activeSlideTitle = this.DOM.activeSlide.querySelector('.slide-content');\n      this.DOM.oldSlide = direction === \"next\" ? this.DOM.el.querySelector('.swiper-slide-prev') : this.DOM.el.querySelector('.swiper-slide-next');\n\n      if (this.DOM.oldSlide) {\n        this.DOM.oldSlideTitle = this.DOM.oldSlide.querySelector('.slide-content');\n      }\n\n      gsap.to(this.DOM.activeSlideTitle, .5, {\n        ease: \"power1.out\",\n        startAt: {\n          y: '40px',\n          opacity: 0\n        },\n        y: '0%',\n        opacity: 1\n      });\n      setTimeout(function () {\n        var activeWidth = $(\".swiper-slide-active\").width() || 1000;\n\n        var nextButton = _this2.DOM.el.querySelector(\".slideshow-navigation-button.next\");\n\n        var preButton = _this2.DOM.el.querySelector(\".slideshow-navigation-button.prev\");\n\n        nextButton.style.transform = \"translateX(\".concat(activeWidth / 2 - 90, \"px)\");\n        preButton.style.transform = \"translateX(-\".concat(activeWidth / 2 - 40, \"px)\");\n      }, 400);\n    }\n  }]);\n\n  return ProductSlideshow;\n}();\n\nvar Productslideshow = new ProductSlideshow(document.querySelector('.product-slideshow'));\n/* unused harmony default export */ var __WEBPACK_DEFAULT_EXPORT__ = ((/* unused pure expression or super */ null && (ProductSlideshow)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n")}},__webpack_exports__={};__webpack_modules__[8]()})();